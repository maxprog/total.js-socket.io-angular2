{"version":3,"sources":["webpack:///./src/app/services/socket-io.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/components/chat/chat.component.html","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport * as io from 'socket.io-client';\r\n\r\nexport class SocketIOService{\r\n    private url = 'http://localhost:8000';\r\n    private socket:any;\r\n    \r\n    sendMessage(message:string){\r\n        \tconsole.log('Sent '+message);\r\n        this.socket.emit('message', message);\r\n    }\r\n    \r\n    receiveMessages(){\r\n        let observable = new Observable((observer:any) => {\r\n            this.socket = io(this.url);\r\n            this.socket.on('receive', (message:string) => {\r\n              console.log('Received %s',message); \r\n                observer.next(message);\r\n            });\r\n            return () => {\r\n                this.socket.disconnect();\r\n            }\r\n        })\r\n        return observable;\r\n    }\r\n    \r\n      \r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/socket-io.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 296;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 296\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\nimport {SocketIOService} from './services/socket-io.service';\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector: 'app',\r\n    templateUrl: 'app.component.html',\r\n    providers: [SocketIOService]\r\n})\r\n\r\nexport class AppComponent { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { AppComponent }  from './app.component';\r\nimport {ChatComponent} from './components/chat/chat.component';\r\n\r\n@NgModule({\r\n  imports: [ BrowserModule, FormsModule ],\r\n  declarations: [ AppComponent,ChatComponent],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {SocketIOService} from '../../services/socket-io.service';\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector: 'chat',\r\n    templateUrl: 'chat.component.html'\r\n})\r\nexport class ChatComponent implements OnInit, OnDestroy { \r\n    messages: any = [];\r\n    message: string;\r\n    connection: any;\r\n  \r\n  \r\n    \r\n    constructor(private socketIOService:SocketIOService){\r\n        \r\n    }\r\n    \r\n    sendMessage(){\r\n        this.socketIOService.sendMessage(this.message);\r\n        this.addMessage(this.message);\r\n        this.message = '';\r\n    }\r\n\r\n     addMessage(message:any){\r\n        this.messages.push(message);\r\n        console.log('messages',this.messages);\r\n    }\r\n    \r\n    ngOnInit(){\r\n        this.connection = this.socketIOService.receiveMessages().subscribe(message => {\r\n             \r\n            this.messages.push(message);\r\n        });\r\n    }\r\n    \r\n    ngOnDestroy(){\r\n        this.connection.unsubscribe();\r\n    }\r\n    \r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/chat/chat.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\\t<div class=\\\"container-background\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"center\\\">\\r\\n\\t\\t\\t\\t<a href=\\\"/\\\"><img src=\\\"../assets/img/logo.png\\\" alt=\\\"total.js - web application framework for node.js\\\" border=\\\"0\\\" /></a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t<br />\\r\\n\\t\\t\\t\\r\\n    <chat></chat>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t <footer class=\\\"footer\\\">\\r\\n      \\r\\n       &copy; Thank you for using <b>total.js</b>.\\r\\n    \\r\\n    </footer>\\r\\n\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 476\n// module chunks = 1","module.exports = \"<!--<script>\\r\\n\\tvar socket=io.connect();\\r\\n\\tsocket.on('receive',function(message){\\r\\n    addMessage(message);\\r\\n\\t});\\r\\n\\tvar sendMessage = function(){\\r\\n\\t\\tvar value=document.getElementById('message').value;\\r\\n\\t\\tconsole.log('Sent '+value);\\r\\n\\t\\tsocket.emit('message',{message:value});\\r\\n\\t\\taddMessage(value);\\r\\n\\t\\tdocument.getElementById('message').value='';\\r\\n\\t};\\r\\n   var keyPress = function(event){\\r\\n\\t\\tif (event.keyCode==13){\\r\\n\\t\\t\\tsendMessage();\\r\\n\\t\\t}\\r\\n   };\\r\\n   var addMessage = function(message){\\r\\n\\t   console.log('Received %s',message);\\r\\n      document.getElementById(\\\"messages\\\").value += message+\\\"\\\\n\\\";\\r\\n   };\\r\\n</script>\\r\\n-->\\r\\n\\r\\n<hr />\\r\\n<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"form-group\\\">\\r\\n  <label for=\\\"comment\\\">Messages</label>\\r\\n  <textarea class=\\\"form-control\\\" rows=\\\"10\\\" id=\\\"messages\\\" readonly name=\\\"messages\\\">{{messages.join('\\\\n')}}</textarea>\\r\\n</div>\\r\\n\\t\\t\\t \\r\\n\\r\\n\\t\\t</div>\\r\\n<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12 \\\">\\r\\n\\t\\t\\t\\t\\t <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" id=\\\"message\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"message\\\" name=\\\"message\\\" placeholder=\\\"Input message...\\\" (keyup.enter)=\\\"sendMessage()\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"sendMessage()\\\"><span class=\\\"fa fa-envelope\\\"> </span>SUBMIT</button>\\r\\n      </span>\\r\\n    </div><!-- /input-group -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\r\\n\\r\\n\\t\\r\\n<br />\\r\\n<div class=\\\"center\\\">\\r\\n\\t\\r\\n\\r\\n\\t<h3><b>Total.js with socket.io</b></h3>\\r\\n\\t\\tThe node.js framework for all web developers with everything what you need.\\r\\n</div>\\r\\n<br />\\r\\n<br />\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/chat/chat.component.html\n// module id = 477\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 496\n// module chunks = 1"],"sourceRoot":""}